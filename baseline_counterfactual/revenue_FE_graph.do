* load the data generated by revenue_FE_generate.do

* uncomment if filter for a single LGU type
*keep if LGU == 4

collapse (sum) Y yhat, by(tq yearq_id comp)

bys tq: egen double yhat_tot = total(yhat)

* Contribution to overall % deviation (so stacks sum to the total %)
gen double contrib =  (Y - yhat) / yhat_tot
label var contrib "Contribution to total % deviation"

* Keep only what we need for reshape
keep tq yearq_id comp contrib

* Wide
reshape wide contrib, i(tq) j(comp) string

* Optional: tidy labels for legend
foreach v of varlist contrib* {
    local nm  = substr("`v'", 9, .)               // drop "contrib"
    local lab = subinstr("`nm'", "_", " ", .)
    label var `v' "`lab'"
}

* Build the bar series in your preferred order (auto-skips missing ones)
local bars
foreach c in pit cit grants subsidies own_revenue eu_grants {
    capture confirm var contrib`c'
    if !_rc local bars `bars' contrib`c'
}

* Overall % deviation line = sum of contributions each quarter
egen double total_pct = rowtotal(contrib*)

* --- Choose order for stacking & legend (auto-skip missing series) ---
local bars
foreach c in pit cit grants subsidies own_revenue eu_grants {
    capture confirm var contrib`c'
    if !_rc local bars `bars' contrib`c'
}

* Running bases
cap drop _bp _bn
gen double _bp = 0
gen double _bn = 0

* Build [low, high] bands for each component (positives up, negatives down)
foreach v of local bars {
    cap drop lo_`v' hi_`v'
    gen double lo_`v' = cond(`v' >= 0, _bp, _bn + `v')
    gen double hi_`v' = cond(`v' >= 0, _bp + `v', _bn)
    replace _bp = cond(`v' >= 0, hi_`v', _bp)
    replace _bn = cond(`v' <  0,  lo_`v', _bn)
}

* --- Build the twoway rbar layers in the same order ---
local twolayers
local i = 0
foreach v of local bars {
    local ++i
    local col = cond(`i'==1,"navy", ///
                 cond(`i'==2,"teal", ///
                 cond(`i'==3,"red", ///
                 cond(`i'==4,"orange", ///
                 cond(`i'==5,"black","green")))))
    local twolayers `twolayers' ///
        (rbar lo_`v' hi_`v' yearq_id, lcolor(none) fcolor(`col') barwidth(0.7))
}

* --- Add the overall % deviation line (sum of contributions) ---
* Ensure total_pct exists:
capture confirm var total_pct
if _rc egen double total_pct = rowtotal(contrib*)



* --- plot ---

* x-axis labels
label define yearqlab 1 "19Q1" 2 "19Q2" 3 "19Q3" 4 "19Q4" ///
    5 "20Q1" 6 "20Q2" 7 "20Q3" 8 "20Q4" ///
    9 "21Q1" 10 "21Q2" 11 "21Q3" 12 "21Q4" ///
    13 "22Q1" 14 "22Q2" 15 "22Q3" 16 "22Q4" ///
    17 "23Q1" 18 "23Q2" 19 "23Q3" 20 "23Q4" ///
    21 "24Q1" 22 "24Q2" 23 "24Q3" 24 "24Q4"
label values yearq_id yearqlab

twoway ///
    `twolayers' || ///
    line total_pct yearq_id, lwidth(medthick) lcolor(black) ///
    , ///
    yline(0, lcolor(black) lpattern(solid)) ///
    xline(12.5, lcolor(black) lpattern(solid)) ///
    ytitle("Deviation from baseline") ///
    xlabel(1(1)24, valuelabel angle(45) labsize(small) nogrid) ///
    xtick(1(1)24) ///
    xscale(range(0.5 24.5)) ///
    ylabel(, nogrid) ///
    xtitle("") ///
    legend(order( ///
        1 "PIT" 2 "CIT" 3 "Targeted grants" ///
        4 "Subsidies" 5 "Own revenue" 6 "EU Grants" ///
        7 "Total % deviation") rows(3) position(6)) ///
    plotregion(margin(large)) graphregion(color(white))
